from aiogram import types
from db_class import DBCommands


def reply_markup_captcha(captcha_list: list):
    kb = types.ReplyKeyboardMarkup(row_width=4, resize_keyboard=True, one_time_keyboard=True)
    for i in captcha_list:
        btn = types.KeyboardButton(text=i[0])
        kb.add(btn)

    return kb


def inline_markup_captcha():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn = types.InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', callback_data='get_captcha')

    kb.add(btn)

    return kb


def inline_markup_menu():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–ü–æ–∫—É–ø–∫–∞ üõí', callback_data='buy')
    btn2 = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã üßæ', callback_data='price_list')
    btn3 = types.InlineKeyboardButton('–†–∞–±–æ—Ç–∞ ', callback_data='work')
    btn4 = types.InlineKeyboardButton('–ü–æ–º–æ—â—å üÜò', callback_data='support')

    kb.add(btn1, btn2, btn3, btn4)

    return kb


def inline_markup_admin_menu():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –ú–ï–ù–Æ', callback_data='set_menu_text')
    btn2 = types.InlineKeyboardButton('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –ü–û–î–î–ï–†–ñ–ö–ê', callback_data='set_support_text')
    btn3 = types.InlineKeyboardButton('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –†–ê–ë–û–¢–ê', callback_data='set_work_text')
    btn4 = types.InlineKeyboardButton('–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å BTC Wallet', callback_data='set_btc_wallet')
    btn5 = types.InlineKeyboardButton('–¢–æ–≤–∞—Ä—ã', callback_data='products')
    btn6 = types.InlineKeyboardButton('Locations', callback_data='locations')
    btn7 = types.InlineKeyboardButton('–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', callback_data='sharing')
    btn8 = types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞', callback_data='add_moderator')
    btn9 = types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main_menu')

    kb.add(btn1, btn2, btn3, btn4, btn5, btn6, btn7, btn8, btn9)

    return kb


async def inline_markup_products_list(db: DBCommands):
    kb = types.InlineKeyboardMarkup(row_width=1)

    for i in await db.get_all_products():
        btn = types.InlineKeyboardButton(text=str(i[0]), callback_data=str(i[0]))
        kb.add(btn)

    btn1 = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä ‚ûï', callback_data='add_product')
    btn2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©', callback_data='back')

    kb.add(btn1, btn2)

    return kb


async def inline_markup_products_list_client(db: DBCommands):
    kb = types.InlineKeyboardMarkup(row_width=1)

    for i in await db.get_all_products():
        btn = types.InlineKeyboardButton(text=str(i[0]), callback_data=str(i[0]))
        kb.add(btn)

    btn = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©', callback_data='back')

    kb.add(btn)

    return kb


async def inline_markup_locations_list(db: DBCommands):
    kb = types.InlineKeyboardMarkup(row_width=1)

    for i in await db.get_all_locations():
        btn = types.InlineKeyboardButton(text=str(i[0]), callback_data=str(i[0]))
        kb.add(btn)

    btn1 = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é ‚ûï', callback_data='add_location')
    btn2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©', callback_data='back')

    kb.add(btn1, btn2)

    return kb


async def inline_markup_locations_list_client(db: DBCommands):
    kb = types.InlineKeyboardMarkup(row_width=1)

    for i in await db.get_all_locations():
        btn = types.InlineKeyboardButton(text=str(i[0]), callback_data=str(i[0]))
        kb.add(btn)

    btn = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©', callback_data='back')

    kb.add(btn)

    return kb


async def inline_markup_categories_by_product_client(db: DBCommands, product_name: str):
    kb = types.InlineKeyboardMarkup(row_width=1)

    for i in await db.get_all_categories_by_product_name(product_name):
        btn = types.InlineKeyboardButton(text=str(i[0]), callback_data=str(i[0]))
        kb.add(btn)

    btn = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©', callback_data='back')

    kb.add(btn)

    return kb


async def inline_markup_categories_by_product_admin(db: DBCommands, product_name: str):
    kb = types.InlineKeyboardMarkup(row_width=1)

    for i in await db.get_all_categories_by_product_name(product_name):
        btn = types.InlineKeyboardButton(text=str(i[0]), callback_data=str(i[0]))
        kb.add(btn)

    btn1 = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚ûï', callback_data='add_category')
    btn2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚Ü©', callback_data='back')

    kb.add(btn1, btn2)

    return kb


def inline_markup_product_opportunities():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', callback_data='edit_name')
    btn2 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞', callback_data='edit_description')
    btn3 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ —Ç–æ–≤–∞—Ä–∞', callback_data='edit_photo')
    btn4 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä', callback_data='delete_product')
    btn5 = types.InlineKeyboardButton('–ö–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data='categories')
    btn6 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©Ô∏è', callback_data='back')

    kb.add(btn1, btn2, btn3, btn4, btn5, btn6)

    return kb


def inline_markup_locations_opportunities():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ª–æ–∫–∞—Ü–∏—é', callback_data='edit_location')
    btn2 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é', callback_data='delete_location')
    btn3 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©Ô∏è', callback_data='back')

    kb.add(btn1, btn2, btn3)

    return kb


def inline_markup_categories_opportunities():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏', callback_data='edit_category')
    btn2 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ü–µ–Ω—É', callback_data='edit_price')
    btn3 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='delete_category')
    btn4 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©Ô∏è', callback_data='back')

    kb.add(btn1, btn2, btn3, btn4)

    return kb


def inline_markup_sure():
    kb = types.InlineKeyboardMarkup(row_width=2)

    btn1 = types.InlineKeyboardButton('–î–∞, —É–¥–∞–ª–∏—Ç—å', callback_data='yes')
    btn2 = types.InlineKeyboardButton('–ù–µ—Ç, –æ—Å—Ç–∞–≤–∏—Ç—å', callback_data='no')

    kb.add(btn1, btn2)

    return kb


def inline_markup_edit():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ', callback_data='edit')
    btn2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©Ô∏è', callback_data='back')

    kb.add(btn1, btn2)

    return kb


def inline_markup_edit_options():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data='edit')
    btn2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ‚Ü©Ô∏è', callback_data='back')

    kb.add(btn1, btn2)

    return kb


def inline_markup_client_choice():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å ‚û°', callback_data='continue')
    btn2 = types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞', callback_data='back')

    kb.add(btn1, btn2)

    return kb


def inline_markup_client_order():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–Ø –æ–ø–ª–∞—Ç–∏–ª(–∞)', callback_data='success')
    btn2 = types.InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑', callback_data='back')

    kb.add(btn1, btn2)

    return kb


def inline_markup_back(text):
    kb = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton(text + ' ‚Ü©Ô∏è', callback_data='back')

    kb.add(btn1)

    return kb


def inline_markup_products_back():
    kb = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton('–ù–∞ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Ü©Ô∏è', callback_data='products_back')

    kb.add(btn1)

    return kb


def reply_markup_call_off(text):
    kb = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton(text=text)

    kb.add(btn1)

    return kb


def reply_markup_back_or_menu(btn1_text, btn2_text):
    kb = types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True, one_time_keyboard=True)
    btn1 = types.KeyboardButton(text=btn1_text)
    btn2 = types.KeyboardButton(text=btn2_text)

    kb.add(btn1, btn2)

    return kb


def inline_markup_ok():
    kb = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton('OK ‚úÖ', callback_data='ok')

    kb.add(btn1)

    return kb


def inline_markup_check_request():
    kb = types.InlineKeyboardMarkup(row_width=1)
    btn1 = types.InlineKeyboardButton('–û–¢–í–ï–¢–ò–¢–¨ –ù–ê –ó–ê–Ø–í–ö–£', callback_data='get_request')

    kb.add(btn1)

    return kb


def inline_markup_request_opps():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–û–¥–æ–±—Ä–∏—Ç—å –∑–∞—è–≤–∫—É ‚úÖ', callback_data='approve')
    btn2 = types.InlineKeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É ‚ùå', callback_data='reject')

    kb.add(btn1, btn2)

    return kb


def inline_markup_reject():
    kb = types.InlineKeyboardMarkup(row_width=1)

    btn1 = types.InlineKeyboardButton('–î–∞, –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É ‚ùå', callback_data='sure_reject')
    btn2 = types.InlineKeyboardButton('–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —ç—Ç–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞', callback_data='block')

    kb.add(btn1, btn2)

    return kb

